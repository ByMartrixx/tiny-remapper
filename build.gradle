plugins {
	id "java"
	id "maven-publish"
	id "com.diffplug.spotless" version "5.10.2"
	id "com.github.johnrengelman.shadow" version "6.1.0"
	// TODO: Apply checkstyle
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = '0.3.2'

def ENV = System.getenv()
version = version + (ENV.GITHUB_ACTIONS ? "" : "+local")

group = "org.quiltmc"
archivesBaseName = 'tiny-remapper'

repositories {
	mavenCentral()
}

dependencies {
	def asmVersion = "9.1"

	implementation "org.ow2.asm:asm:$asmVersion"
	implementation "org.ow2.asm:asm-commons:$asmVersion"
	implementation "org.ow2.asm:asm-tree:$asmVersion"
	implementation "org.ow2.asm:asm-util:$asmVersion"
}

java {
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = 8
	}
}

spotless {
	java {
		// Only apply license changes when files are modified
		ratchetFrom "origin/master"

		// Use comma separator for openjdk like license headers
		licenseHeaderFile(file("HEADER")).yearSeparator(", ")
	}
}

shadowJar {
	archiveClassifier = "fat"
}

jar {
	manifest {
		attributes	"Implementation-Title": "TinyRemapper",
					"Implementation-Version": archiveVersion,
					// TODO: Move to application plugin instead of placing this in the manifest directly
					"Main-Class": "net.fabricmc.tinyremapper.Main",
					"Automatic-Module-Name": "org.quiltmc.tinyremapper"
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}
